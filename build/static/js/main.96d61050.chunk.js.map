{"version":3,"sources":["components/insertForm/table.js","components/insertForm/form.js","components/insertForm/TabPanel.js","App.js","reportWebVitals.js","index.js"],"names":["Row","props","row","React","open","setOpen","TableRow","sx","borderBottom","TableCell","align","FormControlLabel","control","Checkbox","label","IconButton","size","onClick","sub_date","getFullYear","getMonth","getDate","date","lane_number","distributor","dis_notes","table_title","table_notes","sweep","sweep_notes","pin","pin_notes_needed","ball_return","ball_return_notes","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Table","width","indexOf","className","marginLeft","FormGroup","display","justifyContent","CollapsibleTable","setRow","value","setValue","showAlert","setShowAlert","originData","JSON","parse","localStorage","getItem","TextField","id","type","autoComplete","variant","onChange","e","currentTarget","data","list","input","searchText","item","key","toString","toUpperCase","filter","wildCardSearch","marginBottom","InputProps","startAdornment","InputAdornment","position","SearchOutlined","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","newValue","renderInput","startProps","endProps","mx","Alert","severity","marginTop","Button","padding","backgroundColor","color","height","Date","console","log","TableContainer","component","Paper","TableHead","TableBody","textAlign","map","it","_id","length","inputStyle","Form","select","setSelect","distributorJam","orientingPanJam","skippedPosition","failedToIndex","other","setDistributor","disNotes","setDisNotes","monitorNotRunning","pinJam","pinJammedInTable","pinsKnockedOverWhileSpotting","pinsNotSpotted","spottedRackMissingPins","table","setTable","tableNotes","setTableNotes","pinHeldSweep","motorNotRunning","setSweep","sweepNotes","setSweepNotes","resptPins","addPins","offSpotIn","deadwood","setPin","pinNotes","setPinNotes","ballRidingFrontRoller","ballRidingBounceBoard","ballYoYo","paddlePushingBallOut","liftArmNotLiftingBall","pinInBallExit","ballUnderground","ballAtFrontUnit","ballReturn","setBallReturn","ballReturnNotes","setBallReturnNotes","error","setError","evalue","setEval","onChangeDistributor","title","target","name","prevState","onChangeTable","onSweepChange","onInputChange","onChangePin","onChangeBall","Grid","container","spacing","xs","sm","lg","DatePicker","class","required","undefined","FormControl","m","minWidth","InputLabel","Select","labelId","MenuItem","FormHelperText","Stack","noValidate","hiddenLabel","fullWidth","newDistributor","slice","newTable","newSweep","newPin","newBall","stringify","onsubmit","TabPanel","children","index","role","hidden","p","Typography","a11yProps","FullWidthTabs","theme","useTheme","bgcolor","AppBar","Tabs","event","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","dir","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gjBA2CA,SAASA,EAAIC,GACX,IAAQC,EAAQD,EAARC,IACR,EAAwBC,YAAe,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,WAAe,IAArC,6BAMA,OACE,mCACE,eAAC,WAAD,WACE,eAACG,EAAA,EAAD,CAAUC,GAAI,CAAE,QAAS,CAAEC,aAAc,UAAzC,UACE,cAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,cAACC,EAAA,EAAD,CAAkBC,QAAS,cAACC,EAAA,EAAD,IAAcC,MAAM,OAEjD,cAACL,EAAA,EAAD,UACE,cAACM,EAAA,EAAD,CACE,aAAW,aACXC,KAAK,QACLC,QAAS,kBAAMZ,GAASD,IAH1B,SAKGA,EAAO,cAAC,IAAD,IAA0B,cAAC,IAAD,QAGtC,cAACK,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGT,EAAMiB,SAASC,cACd,KACClB,EAAMiB,SAASE,WAAa,GAC7B,IACAnB,EAAMiB,SAASG,YAEnB,cAACZ,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGT,EAAMqB,KAAKH,cACV,KACClB,EAAMqB,KAAKF,WAAa,GACzB,IACAnB,EAAMqB,KAAKD,YAEf,cAACZ,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAIqB,cAC/B,cAACd,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAIsB,cAC/B,cAACf,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAIuB,YAC/B,cAAChB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAIwB,cAC/B,cAACjB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAIyB,cAC/B,cAAClB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAI0B,QAC/B,cAACnB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAI2B,cAC/B,cAACpB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAI4B,MAC/B,cAACrB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAI6B,mBAC/B,cAACtB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAI8B,cAC/B,cAACvB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BR,EAAI+B,uBAEjC,cAAC3B,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAAWyB,MAAO,CAAEC,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,SACE,cAACC,EAAA,EAAD,CAAUC,GAAInC,EAAMoC,QAAQ,OAAOC,eAAa,EAAhD,SACE,cAACC,EAAA,EAAD,CAAKnC,GAAI,CAAEoC,OAAQ,GAAnB,SACE,cAACC,EAAA,EAAD,CAAO5B,KAAK,QAAQ,aAAW,YAA/B,SACE,qBAAKkB,MAAO,CAAEW,MAAO,QAArB,UACI3C,EAAIsB,YAAYsB,QAAQ,oBAAsB,GAC9C5C,EAAIsB,YAAYsB,QAAQ,qBAAuB,GAC/C5C,EAAIsB,YAAYsB,QAAQ,oBAAsB,GAC9C5C,EAAIwB,YAAYoB,QAAQ,YAAc,GACtC5C,EAAIwB,YAAYoB,QAAQ,wBAA0B,GAClD5C,EAAI4B,IAAIgB,QAAQ,8BAAgC,GAChD5C,EAAI4B,IAAIgB,QAAQ,gBAAkB,GAClC5C,EAAI4B,IAAIgB,QAAQ,aAAe,IAC/B,sBAAKC,UAAU,OAAf,UACE,gEACA,qBAAKb,MAAO,CAAEc,WAAY,QAA1B,SACE,eAACC,EAAA,EAAD,CACEF,UAAU,OACVxC,GAAI,CACF2C,QAAS,OACTC,eAAgB,iBAJpB,UAOE,cAACxC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,MAER,cAACH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,MAER,cAACH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,MAER,cAACH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,MAER,cAACH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,MAER,cAACH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,MAER,cAACH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,MAER,cAACH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,MAER,cAACH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,MAER,cAACH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,gCAiBrB,SAASsC,IACtB,MAAsBjD,WAAe,IAArC,mBAAOD,EAAP,KAAYmD,EAAZ,KACA,EAA0BlD,WAAe,CAAC,KAAM,OAAhD,mBAAOmD,EAAP,KAAcC,EAAd,KACA,EAAkCpD,YAAe,GAAjD,mBAAOqD,EAAP,KAAkBC,EAAlB,KAGMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,SAiDnD,OACE,qCACE,sBAAK5B,MAAO,CAAEgB,QAAS,QAAvB,UACE,cAACa,EAAA,EAAD,CACEC,GAAG,wBACHlD,MAAM,SACNmD,KAAK,OACLC,aAAa,mBACbC,QAAQ,WACRC,SAAU,SAACC,IApCnB,SAAkBA,GAChB,IAAMf,EAAQe,EAAEC,cAAchB,MAExBiB,EAIR,SAAwBC,EAAMC,GAC5B,IAAMC,EAAa,SAACC,GAClB,IAAK,IAAIC,KAAOD,EACd,GAAiB,MAAbA,EAAKC,KAOyC,IAHhDD,EAAKC,GACFC,WACAC,cACAhC,QAAQ2B,EAAMI,WAAWC,eAE5B,OAAO,GAKb,OADAN,EAAOA,EAAKO,QAAO,SAACzB,GAAD,OAAWoB,EAAWpB,MAClCkB,EArBMQ,CADOtB,EACqBJ,GACzCD,EAAOkB,GAiCCH,CAASC,IAEX9D,GAAI,CAAE0E,aAAc,QACpBC,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,EAAA,EAAD,SAKR,sBAAKpD,MAAO,CAAEc,WAAY,QAA1B,UACE,cAACuC,EAAA,EAAD,CACEhF,GAAI,CAAEyC,WAAY,QAClBwC,YAAaC,IAFf,SAIE,cAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,OACRtC,MAAOA,EACPc,SAAU,SAACyB,GACLrC,GAAWC,GAAa,GAC5BF,EAASsC,IAEXC,YAAa,SAACC,EAAYC,GAAb,OACX,eAAC,WAAD,WACE,cAACjC,EAAA,EAAD,eAAegC,IACf,cAACrD,EAAA,EAAD,CAAKnC,GAAI,CAAE0F,GAAI,GAAf,oBACA,cAAClC,EAAA,EAAD,eAAeiC,YAKtBxC,EACC,cAAC0C,EAAA,EAAD,CACEC,SAAS,QACT5F,GAAI,CAAE6F,UAAW,MAAOnB,aAAc,OAFxC,gEAOA,MAGJ,cAACoB,EAAA,EAAD,CACEnE,MAAO,CACLoE,QAAS,YACTtD,WAAY,OACZuD,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,QAEVtC,QAAQ,YACRqC,MAAM,UACNxF,KAAK,QACLC,QAhHR,WACE,GAAKqC,EAAM,IAAOA,EAAM,GAAxB,CAIA,IACMoB,EAAa,SAACC,GAClB,IAAK,IAAIC,KAAOD,EACd,GACE,IAAI+B,KAAK/B,EAAKrD,MAAQ,IAAIoF,KAAKpD,EAAM,KACrC,IAAIoD,KAAK/B,EAAKrD,MAAQ,IAAIoF,KAAKpD,EAAM,IAErC,OAAOqB,GAGPJ,EAVcb,EAUKqB,QAAO,SAACzB,GAAD,OAAWoB,EAAWpB,MACtDqD,QAAQC,IAAIrC,GACZlB,EAAOkB,QAfLd,GAAa,IAmGX,SAaE,cAAC,IAAD,SAIJ,cAACoD,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACnE,EAAA,EAAD,CAAO,aAAW,oBAAoBrC,GAAI,CAAEsC,MAAO,QAAnD,UACE,cAACmE,EAAA,EAAD,UACE,eAAC1G,EAAA,EAAD,WACE,cAACG,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,6BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,kBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,yCACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,iBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,kCACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,oCAGJ,cAACuG,EAAA,EAAD,CAAW1G,GAAI,CAAE2G,UAAW,UAA5B,SACGhH,EAAIiH,KAAI,SAACC,GAAD,OACP,cAACpH,EAAD,CAEEE,IAAKkH,EACLlG,SAAU,IAAIwF,KAAKU,EAAGlG,UACtBI,KAAM,IAAIoF,KAAKU,EAAG9F,OAHb8F,EAAGC,eASH,GAAdnH,EAAIoH,QACH,oBAAIpF,MAAO,CAAEgF,UAAW,SAAUd,UAAW,QAA7C,mC,0FC5SFmB,I,OAAa,IAIJ,SAASC,KACtB,IAQA,EAA0BrH,WAAe,IAAIuG,MAA7C,mBAAOpD,EAAP,KAAcC,EAAd,KACA,EAA4BpD,aAA5B,mBAAOsH,EAAP,KAAeC,EAAf,KACA,EAAsCvH,WAAe,CACnDwH,eAAgB,GAChBC,gBAAiB,GACjBC,gBAAiB,GACjBC,cAAe,GACfC,MAAO,KALT,mBAAOvG,EAAP,KAAoBwG,EAApB,KAOA,EAAgC7H,aAAhC,mBAAO8H,EAAP,KAAiBC,EAAjB,KACA,EAA0B/H,WAAe,CACvCgI,kBAAmB,GACnBC,OAAQ,GACRC,iBAAkB,GAClBC,6BAA8B,GAC9BC,eAAgB,GAChBC,uBAAwB,KAN1B,mBAAOC,EAAP,KAAcC,EAAd,KAQA,EAAoCvI,aAApC,mBAAOwI,EAAP,KAAmBC,EAAnB,KACA,EAA0BzI,WAAe,CACvC0I,aAAc,GACdC,gBAAiB,KAFnB,mBAAOlH,EAAP,KAAcmH,EAAd,KAIA,EAAoC5I,aAApC,mBAAO6I,EAAP,KAAmBC,EAAnB,KACA,EAAsB9I,WAAe,CACnC+I,UAAW,GACXC,QAAS,GACTC,UAAW,GACXC,SAAU,KAJZ,mBAAOvH,EAAP,KAAYwH,EAAZ,KAMA,EAAgCnJ,aAAhC,mBAAOoJ,EAAP,KAAiBC,EAAjB,KACA,EAAoCrJ,WAAe,CACjDsJ,sBAAuB,GACvBC,sBAAuB,GACvBC,SAAU,GACVC,qBAAsB,GACtBC,sBAAuB,GACvBC,cAAe,GACfC,gBAAiB,GACjBC,gBAAiB,KARnB,oBAAOC,GAAP,MAAmBC,GAAnB,MAUA,GAA8C/J,aAA9C,qBAAOgK,GAAP,MAAwBC,GAAxB,MAEA,GAA0BjK,aAA1B,qBAAOkK,GAAP,MAAcC,GAAd,MACA,GAA0BnK,aAA1B,qBAAOoK,GAAP,MAAeC,GAAf,MAEA,SAASC,GAAoBpG,EAAGqG,GACI,IAA9BlJ,EAAY6C,EAAEsG,OAAOC,MACvB5C,GAAe,SAAC6C,GAAD,mBAAC,eACXA,GADU,kBAEZxG,EAAEsG,OAAOC,KAAOF,OAGnB1C,GAAe,SAAC6C,GAAD,mBAAC,eACXA,GADU,kBAEZxG,EAAEsG,OAAOC,KAAO,QAIvB,SAASE,GAAczG,EAAGqG,GACI,IAAxBjC,EAAMpE,EAAEsG,OAAOC,MACjBlC,GAAS,SAACmC,GAAD,mBAAC,eACLA,GADI,kBAENxG,EAAEsG,OAAOC,KAAOF,OAGnBhC,GAAS,SAACmC,GAAD,mBAAC,eACLA,GADI,kBAENxG,EAAEsG,OAAOC,KAAO,QAIvB,SAASG,GAAc1G,EAAGuG,GACI,IAAxBhJ,EAAMyC,EAAEsG,OAAOC,MACjB7B,GAAS,SAAC8B,GAAD,mBAAC,eACLA,GADI,kBAENxG,EAAEsG,OAAOC,KAAOA,OAGnB7B,GAAS,SAAC8B,GAAD,mBAAC,eACLA,GADI,kBAENxG,EAAEsG,OAAOC,KAAO,QAIvB,SAASI,GAAc3G,EAAGuG,GACxB,OAAQA,GACN,IAAK,WACH1C,EAAY7D,EAAEsG,OAAOrH,OAErB,MACF,IAAK,aACHsF,EAAcvE,EAAEsG,OAAOrH,OAEvB,MACF,IAAK,aACH2F,EAAc5E,EAAEsG,OAAOrH,OAEvB,MACF,IAAK,WACHkG,EAAYnF,EAAEsG,OAAOrH,OAErB,MACF,IAAK,kBACH8G,GAAmB/F,EAAEsG,OAAOrH,QAMlC,SAAS2H,GAAY5G,EAAGqG,GACI,IAAtB5I,EAAIuC,EAAEsG,OAAOC,MACftB,GAAO,SAACuB,GAAD,mBAAC,eACHA,GADE,kBAEJxG,EAAEsG,OAAOC,KAAOF,OAGnBpB,GAAO,SAACuB,GAAD,mBAAC,eACHA,GADE,kBAEJxG,EAAEsG,OAAOC,KAAO,QAKvB,SAASM,GAAa7G,EAAGqG,GACU,IAA7BT,GAAW5F,EAAEsG,OAAOC,MACtBV,IAAc,SAACW,GAAD,mBAAC,eACVA,GADS,kBAEXxG,EAAEsG,OAAOC,KAAOF,OAGnBR,IAAc,SAACW,GAAD,mBAAC,eACVA,GADS,kBAEXxG,EAAEsG,OAAOC,KAAO,QA4FvB,OACE,mCACE,cAACO,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,eAACF,GAAA,EAAD,CACExG,MAAI,EACJ2G,GAAI,GACJC,GAAI,EACJC,GAAI,EACJjL,GAAI,CACFoC,OAAQ,SACR4D,gBAAiB,QACjBH,UAAW,QACXE,QAAS,QATb,UAYE,oBAAIpE,MAAO,CAAEE,WAAY,QAAzB,gCACA,oBAAIF,MAAO,CAAEkE,UAAW,UACxB,sBAAKlE,MAAO,CAAEkE,UAAW,SAAzB,UACE,yCACA,cAACb,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACE,cAACgG,GAAA,EAAD,CACE3F,YAAa,SAAC7F,GAAD,OAAW,cAAC8D,EAAA,EAAD,eAAe9D,KACvCqD,MAAOA,EACPoI,OAAK,EACLC,UAAQ,EACRvH,SAAU,SAACyB,GACTtC,EAASsC,gBAKN+F,GAAVrB,GACC,GAEA,mBAAGrI,MAAO,CAAEsE,MAAO,OAAnB,oCAGF,sBAAKtE,MAAO,CAAEkE,UAAW,SAAzB,UACE,6CACA,eAACyF,GAAA,EAAD,CAAaF,UAAQ,EAACpL,GAAI,CAAEuL,EAAG,EAAGC,SAAU,IAAKlJ,MAAO,OAAxD,UACE,cAACmJ,GAAA,EAAD,CAAYhI,GAAG,oCAAf,2BAGA,eAACiI,GAAA,EAAD,CACEC,QAAQ,oCACRlI,GAAG,8BACHV,MAAOmE,EACP3G,MAAM,QACN6K,UAAQ,EALV,UAOE,cAACQ,GAAA,EAAD,CAAU7I,MAAM,GAAGrC,QAAS,SAACoD,GAAD,OAAOqD,OAAUkE,IAA7C,SACE,wCAEF,cAACO,GAAA,EAAD,CACE7I,MAAM,IACNrC,QAAS,SAACoD,GAERqD,EADU,WAHd,oBASA,cAACyE,GAAA,EAAD,CACE7I,MAAM,IACNrC,QAAS,SAACoD,GAERqD,EADU,WAHd,oBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,EACPrC,QAAS,SAACoD,GAERqD,EADU,WAHd,oBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,EACPrC,QAAS,SAACoD,GAERqD,EADU,WAHd,oBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,EACPrC,QAAS,SAACoD,GAERqD,EADU,WAHd,oBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,EACPrC,QAAS,SAACoD,GAERqD,EADU,WAHd,oBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,EACPrC,QAAS,SAACoD,GAERqD,EADU,WAHd,oBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,EACPrC,QAAS,SAACoD,GAERqD,EADU,WAHd,oBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,EACPrC,QAAS,SAACoD,GAERqD,EADU,WAHd,oBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,GACPrC,QAAS,SAACoD,GAERqD,EADU,YAHd,qBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,GACPrC,QAAS,SAACoD,GAERqD,EADU,YAHd,qBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,GACPrC,QAAS,SAACoD,GAERqD,EADU,YAHd,qBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,GACPrC,QAAS,SAACoD,GAERqD,EADU,YAHd,qBASA,cAACyE,GAAA,EAAD,CACE7I,MAAO,GACPrC,QAAS,SAACoD,GAERqD,EADU,YAHd,wBAUF,cAAC0E,GAAA,EAAD,YAEQR,GAATvB,GACC,GAEA,mBAAGnI,MAAO,CAAEsE,MAAO,OAAnB,uCAIJ,eAAC6F,EAAA,EAAD,CAAOvF,UAAU,OAAOwF,YAAU,EAACpI,aAAa,MAAhD,UACE,sBAAKnB,UAAU,OAAf,UACE,6CACA,qBAAKb,MAAO,CAAEc,WAAY,QAA1B,SACE,eAACC,EAAA,EAAD,CAAWF,UAAU,OAArB,UACE,cAACpC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,iCACN8J,KAAK,iBACLxG,SAAU,SAACC,GAAD,OACRoG,GAAoBpG,EAAG,sCAG3B,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,oBACN8J,KAAK,kBACLxG,SAAU,SAACC,GAAD,OACRoG,GAAoBpG,EAAG,wBAG3B,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,kCACN8J,KAAK,kBACLxG,SAAU,SAACC,GAAD,OACRoG,GAAoBpG,EAAG,uCAG3B,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,iCACN8J,KAAK,gBACLxG,SAAU,SAACC,GAAD,OACRoG,GAAoBpG,EAAG,sCAG3B,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACT+J,KAAK,QACLxG,SAAU,SAACC,GAAD,OAAOoG,GAAoBpG,EAAG,UACxCvD,MAAM,kBAMd,oBAAIiC,UAAU,OAAd,0CACA,cAACgB,EAAA,EAAD,CACEwI,aAAW,EACXC,WAAS,EACTrI,QAAQ,SACRnD,KAAK,QACLkB,MAAO,CAAEqF,eACTxE,UAAU,OACVqB,SAAU,SAACC,GAAD,OAAO2G,GAAc3G,EAAG,eAGpC,sBAAKtB,UAAU,OAAf,UACE,uCACA,qBAAKb,MAAO,CAAEc,WAAY,QAA1B,SACE,eAACC,EAAA,EAAD,CAAWF,UAAU,OAArB,UACE,cAACpC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,sCACN8J,KAAK,oBACLxG,SAAU,SAACC,GAAD,OACRyG,GAAczG,EAAG,0CAGrB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,+BACN8J,KAAK,SACLxG,SAAU,SAACC,GAAD,OACRyG,GAAczG,EAAG,mCAGrB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,iCACN8J,KAAK,mBACLxG,SAAU,SAACC,GAAD,OACRyG,GAAczG,EAAG,qCAGrB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,mCACN8J,KAAK,+BACLxG,SAAU,SAACC,GAAD,OACRyG,GAAczG,EAAG,uCAGrB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,oCACN8J,KAAK,iBACLxG,SAAU,SAACC,GAAD,OACRyG,GAAczG,EAAG,wCAGrB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,uCACN8J,KAAK,yBACLxG,SAAU,SAACC,GAAD,OACRyG,GAAczG,EAAG,mDAM3B,sBAAKtB,UAAU,OAAf,UACE,wDACA,cAACgB,EAAA,EAAD,CACEwI,aAAW,EACXC,WAAS,EACTrI,QAAQ,SACRnD,KAAK,QACLkB,MAAO,CAAEqF,eACTxE,UAAU,OACVqB,SAAU,SAACC,GAAD,OAAO2G,GAAc3G,EAAG,oBAItC,sBAAKtB,UAAU,OAAf,UACE,uCACA,qBAAKb,MAAO,CAAEc,WAAY,QAA1B,SACE,eAACC,EAAA,EAAD,CAAWF,UAAU,OAArB,UACE,cAACpC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,2CACN8J,KAAK,eACLxG,SAAU,SAACC,GAAD,OACR0G,GACE1G,EACA,+CAIN,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,oCACN8J,KAAK,kBACLxG,SAAU,SAACC,GAAD,OACR0G,GAAc1G,EAAG,gDAO3B,sBAAKtB,UAAU,OAAf,UACE,6CACA,cAACgB,EAAA,EAAD,CACEwI,aAAW,EACXC,WAAS,EACTrI,QAAQ,SACRnD,KAAK,QACLkB,MAAO,CAAEqF,eACTxE,UAAU,OACVqB,SAAU,SAACC,GAAD,OAAO2G,GAAc3G,EAAG,oBAItC,sBAAKtB,UAAU,OAAf,UACE,qCACA,qBAAKb,MAAO,CAAEc,WAAY,QAA1B,SACE,eAACC,EAAA,EAAD,CAAWF,UAAU,OAArB,UACE,cAACpC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,iCACN8J,KAAK,YACLxG,SAAU,SAACC,GAAD,OACR4G,GAAY5G,EAAG,qCAGnB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,8BACN8J,KAAK,UACLxG,SAAU,SAACC,GAAD,OACR4G,GAAY5G,EAAG,kCAGnB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,cACN8J,KAAK,YACLxG,SAAU,SAACC,GAAD,OAAO4G,GAAY5G,EAAG,kBAElC,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,WACN8J,KAAK,WACLxG,SAAU,SAACC,GAAD,OAAO4G,GAAY5G,EAAG,uBAMxC,sBAAKtB,UAAU,OAAf,UACE,0DACA,cAACgB,EAAA,EAAD,CACEwI,aAAW,EACXC,WAAS,EACTrI,QAAQ,SACRnD,KAAK,QACLkB,MAAO,CAAEqF,eACTxE,UAAU,OACVqB,SAAU,SAACC,GAAD,OAAO2G,GAAc3G,EAAG,kBAItC,sBAAKtB,UAAU,OAAf,UACE,6CACA,qBAAKb,MAAO,CAAEc,WAAY,QAA1B,SACE,eAACC,EAAA,EAAD,CAAWF,UAAU,OAArB,UACE,cAACpC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,2BACN8J,KAAK,wBACLxG,SAAU,SAACC,GAAD,OACR6G,GAAa7G,EAAG,+BAGpB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,2BACN8J,KAAK,wBACLxG,SAAU,SAACC,GAAD,OACR6G,GAAa7G,EAAG,+BAGpB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,aACN8J,KAAK,WACLxG,SAAU,SAACC,GAAD,OAAO6G,GAAa7G,EAAG,iBAEnC,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,0BACN8J,KAAK,uBACLxG,SAAU,SAACC,GAAD,OAAO6G,GAAa7G,EAAG,8BAEnC,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,4BACN8J,KAAK,wBACLxG,SAAU,SAACC,GAAD,OACR6G,GAAa7G,EAAG,gCAGpB,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,mBACN8J,KAAK,gBACLxG,SAAU,SAACC,GAAD,OAAO6G,GAAa7G,EAAG,uBAEnC,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,mBACN8J,KAAK,kBACLxG,SAAU,SAACC,GAAD,OAAO6G,GAAa7G,EAAG,uBAEnC,cAAC1D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTC,MAAM,qBACN8J,KAAK,kBACLxG,SAAU,SAACC,GAAD,OAAO6G,GAAa7G,EAAG,iCAMzC,sBAAKtB,UAAU,OAAf,UACE,mDACA,cAACgB,EAAA,EAAD,CACEwI,aAAW,EACXC,WAAS,EACTrI,QAAQ,SACRnD,KAAK,QACLkB,MAAO,CAAEqF,eACTxE,UAAU,OACVqB,SAAU,SAACC,GAAD,OAAO2G,GAAc3G,EAAG,yBAGtC,cAACgC,EAAA,EAAD,CACEnE,MAAO,CACLkE,UAAW,QACXE,QAAS,YACTC,gBAAiB,UACjBC,MAAO,SAETrC,QAAQ,YACRqC,MAAM,UACNxF,KAAK,QACLC,QAhkBZ,WACOqC,GAAOkH,GAAQ,SAEf/C,GAAQ6C,GAAS,SAElBhH,GAAOkH,QAAQoB,GAEfnE,GAAQ6C,QAASsB,GAEjBtI,GAASmE,GAGf,WACE,IAAIgF,EAAiB,GACc,KAA/BjL,EAAYmG,iBACd8E,GAAkBjL,EAAYmG,eAAiB,OACb,KAAhCnG,EAAYoG,kBACd6E,GAAkBjL,EAAYoG,gBAAkB,OACd,KAAhCpG,EAAYqG,kBACd4E,GAAkBjL,EAAYqG,gBAAkB,OAChB,KAA9BrG,EAAYsG,gBACd2E,GAAkBjL,EAAYsG,cAAgB,OACtB,KAAtBtG,EAAYuG,QAAc0E,GAAkBjL,EAAYuG,MAAQ,OACpE0E,EAAiBA,EAAeC,OAAOD,EAAenF,QAAS,GAE/D,IAAIqF,EAAW,GACiB,KAA5BlE,EAAMN,oBACRwE,GAAYlE,EAAMN,kBAAoB,OACnB,KAAjBM,EAAML,SAAeuE,GAAYlE,EAAML,OAAS,OACrB,KAA3BK,EAAMJ,mBACRsE,GAAYlE,EAAMJ,iBAAmB,OACI,KAAvCI,EAAMH,+BACRqE,GAAYlE,EAAMH,6BAA+B,OACtB,KAAzBG,EAAMF,iBAAuBoE,GAAYlE,EAAMF,eAAiB,OAC/B,KAAjCE,EAAMD,yBACRmE,GAAYlE,EAAMD,uBAAyB,OAC7CmE,EAAWA,EAASD,OAAOC,EAASrF,QAAS,GAE7C,IAAIsF,EAAW,GACO,KAAlB9K,EAAIoH,YAAkB0D,GAAY9K,EAAIoH,UAAY,OAClC,KAAhBpH,EAAIqH,UAAgByD,GAAY9K,EAAIqH,QAAU,OAC5B,KAAlBrH,EAAIsH,YAAkBwD,GAAY9K,EAAIsH,UAAY,OACjC,KAAjBtH,EAAIuH,WAAiBuD,GAAY9K,EAAIuH,SAAW,OACpDuD,EAAWA,EAASF,OAAOE,EAAStF,QAAS,GAE7C,IAAIuF,EAAS,GACc,KAAvBjL,EAAMiH,eAAqBgE,GAAUjL,EAAMiH,aAAe,OAChC,KAA1BjH,EAAMkH,kBAAwB+D,GAAUjL,EAAMkH,gBAAkB,OACpE+D,EAASA,EAAOH,OAAOG,EAAOvF,QAAS,GAEvC,IAAIwF,EAAU,GAC2B,KAArC7C,GAAWR,wBACbqD,GAAW7C,GAAWR,sBAAwB,OACP,KAArCQ,GAAWP,wBACboD,GAAW7C,GAAWP,sBAAwB,OACpB,KAAxBO,GAAWN,WAAiBmD,GAAW7C,GAAWN,SAAW,OACzB,KAApCM,GAAWL,uBACbkD,GAAW7C,GAAWL,qBAAuB,OACN,KAArCK,GAAWJ,wBACbiD,GAAW7C,GAAWJ,sBAAwB,OACf,KAA7BI,GAAWH,gBACbgD,GAAW7C,GAAWH,cAAgB,OACL,KAA/BG,GAAWF,kBACb+C,GAAW7C,GAAWF,gBAAkB,OACP,KAA/BE,GAAWD,kBACb8C,GAAW7C,GAAWD,gBAAkB,OAC1C8C,EAAUA,EAAQJ,OAAOI,EAAQxF,QAAS,GAE1C,IACI/C,EAAO,CACTrD,SAFY,IAAIwF,KAGhBpF,KAAMgC,EACN/B,YAAakG,EACbjG,YAAaiL,EACbhL,UAAWwG,EACXvG,YAAaiL,EACbhL,YAAagH,EACb/G,MAAOgL,EACP/K,YAAamH,EACblH,IAAK+K,EACL9K,iBAAkBwH,EAClBvH,YAAa8K,EACb7K,kBAAmBkI,IAErBxD,QAAQC,IAAIrC,GACZZ,KAAKoJ,UAAUxI,GA5EMyI,IA6iBb,8B,oCChuBZ,SAASC,GAAShN,GAChB,IAAQiN,EAAqCjN,EAArCiN,SAAU5J,EAA2BrD,EAA3BqD,MAAO6J,EAAoBlN,EAApBkN,MAAUpF,EAAnC,YAA6C9H,EAA7C,IAEA,OACE,6CACEmN,KAAK,WACLC,OAAQ/J,IAAU6J,EAClBnJ,GAAE,8BAAyBmJ,GAC3B,2CAAmCA,IAC/BpF,GALN,aAOGzE,IAAU6J,GACT,cAACzK,EAAA,EAAD,CAAKnC,GAAI,CAAE+M,EAAG,GAAd,SACE,cAACC,EAAA,EAAD,UAAaL,SAavB,SAASM,GAAUL,GACjB,MAAO,CACLnJ,GAAG,kBAAD,OAAoBmJ,GACtB,gBAAgB,uBAAhB,OAAwCA,IAI7B,SAASM,KACtB,IAAMC,EAAQC,cACd,EAA0BxN,WAAe,GAAzC,mBAAOmD,EAAP,KAAcC,EAAd,KAUA,OACE,eAACb,EAAA,EAAD,CAAKnC,GAAI,CAAEqN,QAAS,oBAApB,UACE,cAACC,EAAA,EAAD,CAAQxI,SAAS,SAAjB,SACE,eAACyI,EAAA,EAAD,CACExK,MAAOA,EACPc,SAba,SAAC2J,EAAOlI,GAC3BtC,EAASsC,IAaHmI,eAAe,YACfC,UAAU,UACV9J,QAAQ,YACR,aAAW,0BANb,UAQE,cAAC+J,EAAA,EAAD,aAAKpN,MAAM,wBAA2B0M,GAAU,KAChD,cAACU,EAAA,EAAD,aAAKpN,MAAM,sBAAyB0M,GAAU,UAGlD,eAAC,IAAD,CACEW,KAA0B,QAApBT,EAAMU,UAAsB,YAAc,IAChDjB,MAAO7J,EACP+K,cAtBoB,SAAClB,GACzB5J,EAAS4J,IAkBP,UAKE,cAACF,GAAD,CAAU3J,MAAOA,EAAO6J,MAAO,EAAGmB,IAAKZ,EAAMU,UAA7C,SACE,cAAC,EAAD,MAEF,cAACnB,GAAD,CAAU3J,MAAOA,EAAO6J,MAAO,EAAGmB,IAAKZ,EAAMU,UAA7C,SACE,cAAC5G,GAAD,Y,IC5EJ+G,G,4JACJ,WACE,OACE,cAAC,IAAD,UACE,cAAC,GAAD,U,GAJUC,aAUHD,MCJAE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.96d61050.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport { SearchOutlined } from \"@mui/icons-material\";\r\nimport ManageSearchTwoToneIcon from \"@mui/icons-material/ManageSearchTwoTone\";\r\nimport { Button, Alert } from \"@mui/material\";\r\nimport { DateRangePicker } from \"@mui/lab\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\n\r\nimport {\r\n  FormControlLabel,\r\n  Checkbox,\r\n  FormGroup,\r\n  TextField,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\r\n          <TableCell align=\"right\">\r\n            <FormControlLabel control={<Checkbox />} label=\"\" />\r\n          </TableCell>\r\n          <TableCell>\r\n            <IconButton\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => setOpen(!open)}\r\n            >\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"center\">\r\n            {props.sub_date.getFullYear() +\r\n              \"-\" +\r\n              (props.sub_date.getMonth() + 1) +\r\n              \"-\" +\r\n              props.sub_date.getDate()}\r\n          </TableCell>\r\n          <TableCell align=\"center\">\r\n            {props.date.getFullYear() +\r\n              \"-\" +\r\n              (props.date.getMonth() + 1) +\r\n              \"-\" +\r\n              props.date.getDate()}\r\n          </TableCell>\r\n          <TableCell align=\"center\">{row.lane_number}</TableCell>\r\n          <TableCell align=\"center\">{row.distributor}</TableCell>\r\n          <TableCell align=\"center\">{row.dis_notes}</TableCell>\r\n          <TableCell align=\"center\">{row.table_title}</TableCell>\r\n          <TableCell align=\"center\">{row.table_notes}</TableCell>\r\n          <TableCell align=\"center\">{row.sweep}</TableCell>\r\n          <TableCell align=\"center\">{row.sweep_notes}</TableCell>\r\n          <TableCell align=\"center\">{row.pin}</TableCell>\r\n          <TableCell align=\"center\">{row.pin_notes_needed}</TableCell>\r\n          <TableCell align=\"center\">{row.ball_return}</TableCell>\r\n          <TableCell align=\"center\">{row.ball_return_notes}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box sx={{ margin: 1 }}>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <div style={{ width: \"100%\" }}>\r\n                    {(row.distributor.indexOf(\"Distributor Jam\") > -1 ||\r\n                      row.distributor.indexOf(\"Skipped Position\") > -1 ||\r\n                      row.distributor.indexOf(\"Failed to Index\") > -1 ||\r\n                      row.table_title.indexOf(\"Pin Jam\") > -1 ||\r\n                      row.table_title.indexOf(\"Pin Jammed in Table\") > -1 ||\r\n                      row.pin.indexOf(\"Spotted Rack Missing Pins\") > -1 ||\r\n                      row.pin.indexOf(\"Respot Pins\") > -1 ||\r\n                      row.pin.indexOf(\"Add Pins\") > -1) && (\r\n                      <div className=\"mt-5\">\r\n                        <h4>You can choose multiple values</h4>\r\n                        <div style={{ marginLeft: \"10px\" }}>\r\n                          <FormGroup\r\n                            className=\"ml-3\"\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space between\",\r\n                            }}\r\n                          >\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"1\"\r\n                            />\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"2\"\r\n                            />\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"3\"\r\n                            />\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"4\"\r\n                            />\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"5\"\r\n                            />\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"6\"\r\n                            />\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"7\"\r\n                            />\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"8\"\r\n                            />\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"9\"\r\n                            />\r\n                            <FormControlLabel\r\n                              control={<Checkbox />}\r\n                              label=\"10\"\r\n                            />\r\n                          </FormGroup>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function CollapsibleTable() {\r\n  const [row, setRow] = React.useState([]);\r\n  const [value, setValue] = React.useState([null, null]);\r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n  let result;\r\n\r\n  const originData = JSON.parse(localStorage.getItem(\"data\"));\r\n\r\n  function searchByDate() {\r\n    if (!value[0] || !value[1]) {\r\n      setShowAlert(true);\r\n      return;\r\n    }\r\n    const searchArray = originData;\r\n    const searchText = (item) => {\r\n      for (let key in item) {\r\n        if (\r\n          new Date(item.date) > new Date(value[0]) &&\r\n          new Date(item.date) < new Date(value[1])\r\n        )\r\n          return item;\r\n      }\r\n    };\r\n    const data = searchArray.filter((value) => searchText(value));\r\n    console.log(data);\r\n    setRow(data);\r\n  }\r\n\r\n  function onChange(e) {\r\n    const value = e.currentTarget.value;\r\n    const searchArray = originData;\r\n    const data = wildCardSearch(searchArray, value);\r\n    setRow(data);\r\n  }\r\n\r\n  function wildCardSearch(list, input) {\r\n    const searchText = (item) => {\r\n      for (let key in item) {\r\n        if (item[key] == null) {\r\n          continue;\r\n        }\r\n        if (\r\n          item[key]\r\n            .toString()\r\n            .toUpperCase()\r\n            .indexOf(input.toString().toUpperCase()) !== -1\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    };\r\n    list = list.filter((value) => searchText(value));\r\n    return list;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\" }}>\r\n        <TextField\r\n          id=\"standard-search-input\"\r\n          label=\"Search\"\r\n          type=\"text\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"standard\"\r\n          onChange={(e) => {\r\n            onChange(e);\r\n          }}\r\n          sx={{ marginBottom: \"30px\" }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchOutlined />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <div style={{ marginLeft: \"20px\" }}>\r\n          <LocalizationProvider\r\n            sx={{ marginLeft: \"20px\" }}\r\n            dateAdapter={AdapterDateFns}\r\n          >\r\n            <DateRangePicker\r\n              startText=\"Date\"\r\n              endText=\"Date\"\r\n              value={value}\r\n              onChange={(newValue) => {\r\n                if (showAlert) setShowAlert(false);\r\n                setValue(newValue);\r\n              }}\r\n              renderInput={(startProps, endProps) => (\r\n                <React.Fragment>\r\n                  <TextField {...startProps} />\r\n                  <Box sx={{ mx: 2 }}> From </Box>\r\n                  <TextField {...endProps} />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n          </LocalizationProvider>\r\n          {showAlert ? (\r\n            <Alert\r\n              severity=\"error\"\r\n              sx={{ marginTop: \"5px\", marginBottom: \"5px\" }}\r\n            >\r\n              You need to enter the start and end date to search\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <Button\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            marginLeft: \"20px\",\r\n            backgroundColor: \"#0066ff\",\r\n            color: \"white\",\r\n            height: \"46px\",\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          size=\"large\"\r\n          onClick={searchByDate}\r\n        >\r\n          <ManageSearchTwoToneIcon />\r\n        </Button>\r\n      </div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\" sx={{ width: \"230%\" }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell></TableCell>\r\n              <TableCell align=\"center\">Submission Date</TableCell>\r\n              <TableCell align=\"center\">Date</TableCell>\r\n              <TableCell align=\"center\">Lane Number</TableCell>\r\n              <TableCell align=\"center\">Distributor</TableCell>\r\n              <TableCell align=\"center\">Distributor Notes(Position)</TableCell>\r\n              <TableCell align=\"center\">Table</TableCell>\r\n              <TableCell align=\"center\">Table Notes</TableCell>\r\n              <TableCell align=\"center\">Sweep</TableCell>\r\n              <TableCell align=\"center\">Sweep Notes</TableCell>\r\n              <TableCell align=\"center\">Pin</TableCell>\r\n              <TableCell align=\"center\">Pin Notes_Pin Needed</TableCell>\r\n              <TableCell align=\"center\">Ball Return</TableCell>\r\n              <TableCell align=\"center\">Ball Return Notes</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody sx={{ textAlign: \"center\" }}>\r\n            {row.map((it) => (\r\n              <Row\r\n                key={it._id}\r\n                row={it}\r\n                sub_date={new Date(it.sub_date)}\r\n                date={new Date(it.date)}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {row.length == 0 && (\r\n        <h3 style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n          No data to display\r\n        </h3>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {\r\n  CardContent,\r\n  Grid,\r\n  Input,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Box,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/lab\";\r\nimport { Button } from \"@mui/material\";\r\nimport classnames from \"classnames\";\r\n\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\r\n\r\nconst gridStyle = {\r\n  margin: \"auto\",\r\n  maxWidth: 500,\r\n  flexGrow: 1,\r\n};\r\n\r\nconst inputStyle = {\r\n  // width: \"200px\",\r\n};\r\n\r\nexport default function Form() {\r\n  let errors = {\r\n    date: \"\",\r\n    select: \"\",\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  const [value, setValue] = React.useState(new Date());\r\n  const [select, setSelect] = React.useState();\r\n  const [distributor, setDistributor] = React.useState({\r\n    distributorJam: \"\",\r\n    orientingPanJam: \"\",\r\n    skippedPosition: \"\",\r\n    failedToIndex: \"\",\r\n    other: \"\",\r\n  });\r\n  const [disNotes, setDisNotes] = React.useState();\r\n  const [table, setTable] = React.useState({\r\n    monitorNotRunning: \"\",\r\n    pinJam: \"\",\r\n    pinJammedInTable: \"\",\r\n    pinsKnockedOverWhileSpotting: \"\",\r\n    pinsNotSpotted: \"\",\r\n    spottedRackMissingPins: \"\",\r\n  });\r\n  const [tableNotes, setTableNotes] = React.useState();\r\n  const [sweep, setSweep] = React.useState({\r\n    pinHeldSweep: \"\",\r\n    motorNotRunning: \"\",\r\n  });\r\n  const [sweepNotes, setSweepNotes] = React.useState();\r\n  const [pin, setPin] = React.useState({\r\n    resptPins: \"\",\r\n    addPins: \"\",\r\n    offSpotIn: \"\",\r\n    deadwood: \"\",\r\n  });\r\n  const [pinNotes, setPinNotes] = React.useState();\r\n  const [ballReturn, setBallReturn] = React.useState({\r\n    ballRidingFrontRoller: \"\",\r\n    ballRidingBounceBoard: \"\",\r\n    ballYoYo: \"\",\r\n    paddlePushingBallOut: \"\",\r\n    liftArmNotLiftingBall: \"\",\r\n    pinInBallExit: \"\",\r\n    ballUnderground: \"\",\r\n    ballAtFrontUnit: \"\",\r\n  });\r\n  const [ballReturnNotes, setBallReturnNotes] = React.useState();\r\n\r\n  const [error, setError] = React.useState();\r\n  const [evalue, setEval] = React.useState();\r\n\r\n  function onChangeDistributor(e, title) {\r\n    if (distributor[e.target.name] == \"\")\r\n      setDistributor((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: title,\r\n      }));\r\n    else\r\n      setDistributor((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: \"\",\r\n      }));\r\n  }\r\n\r\n  function onChangeTable(e, title) {\r\n    if (table[e.target.name] == \"\")\r\n      setTable((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: title,\r\n      }));\r\n    else\r\n      setTable((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: \"\",\r\n      }));\r\n  }\r\n\r\n  function onSweepChange(e, name) {\r\n    if (sweep[e.target.name] == \"\")\r\n      setSweep((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: name,\r\n      }));\r\n    else\r\n      setSweep((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: \"\",\r\n      }));\r\n  }\r\n\r\n  function onInputChange(e, name) {\r\n    switch (name) {\r\n      case \"disNotes\":\r\n        setDisNotes(e.target.value);\r\n\r\n        break;\r\n      case \"tableNotes\":\r\n        setTableNotes(e.target.value);\r\n\r\n        break;\r\n      case \"sweepNotes\":\r\n        setSweepNotes(e.target.value);\r\n\r\n        break;\r\n      case \"pinNotes\":\r\n        setPinNotes(e.target.value);\r\n\r\n        break;\r\n      case \"ballReturnNotes\":\r\n        setBallReturnNotes(e.target.value);\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  function onChangePin(e, title) {\r\n    if (pin[e.target.name] == \"\")\r\n      setPin((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: title,\r\n      }));\r\n    else {\r\n      setPin((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: \"\",\r\n      }));\r\n    }\r\n  }\r\n\r\n  function onChangeBall(e, title) {\r\n    if (ballReturn[e.target.name] == \"\")\r\n      setBallReturn((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: title,\r\n      }));\r\n    else\r\n      setBallReturn((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: \"\",\r\n      }));\r\n  }\r\n\r\n  function validate() {\r\n    if (!value) setEval(\"error\");\r\n\r\n    if (!select) setError(\"error\");\r\n\r\n    if (value) setEval(undefined);\r\n\r\n    if (select) setError(undefined);\r\n\r\n    if (value && select) onsubmit();\r\n  }\r\n\r\n  function onsubmit() {\r\n    let newDistributor = \"\";\r\n    if (distributor.distributorJam !== \"\")\r\n      newDistributor += distributor.distributorJam + \" , \";\r\n    if (distributor.orientingPanJam !== \"\")\r\n      newDistributor += distributor.orientingPanJam + \" , \";\r\n    if (distributor.skippedPosition !== \"\")\r\n      newDistributor += distributor.skippedPosition + \" , \";\r\n    if (distributor.failedToIndex !== \"\")\r\n      newDistributor += distributor.failedToIndex + \" , \";\r\n    if (distributor.other !== \"\") newDistributor += distributor.other + \" , \";\r\n    newDistributor = newDistributor.slice(-newDistributor.length, -3);\r\n\r\n    let newTable = \"\";\r\n    if (table.monitorNotRunning !== \"\")\r\n      newTable += table.monitorNotRunning + \" , \";\r\n    if (table.pinJam !== \"\") newTable += table.pinJam + \" , \";\r\n    if (table.pinJammedInTable !== \"\")\r\n      newTable += table.pinJammedInTable + \" , \";\r\n    if (table.pinsKnockedOverWhileSpotting !== \"\")\r\n      newTable += table.pinsKnockedOverWhileSpotting + \" , \";\r\n    if (table.pinsNotSpotted !== \"\") newTable += table.pinsNotSpotted + \" , \";\r\n    if (table.spottedRackMissingPins !== \"\")\r\n      newTable += table.spottedRackMissingPins + \" , \";\r\n    newTable = newTable.slice(-newTable.length, -3);\r\n\r\n    let newSweep = \"\";\r\n    if (pin.resptPins !== \"\") newSweep += pin.resptPins + \" , \";\r\n    if (pin.addPins !== \"\") newSweep += pin.addPins + \" , \";\r\n    if (pin.offSpotIn !== \"\") newSweep += pin.offSpotIn + \" , \";\r\n    if (pin.deadwood !== \"\") newSweep += pin.deadwood + \" , \";\r\n    newSweep = newSweep.slice(-newSweep.length, -3);\r\n\r\n    let newPin = \"\";\r\n    if (sweep.pinHeldSweep !== \"\") newPin += sweep.pinHeldSweep + \" , \";\r\n    if (sweep.motorNotRunning !== \"\") newPin += sweep.motorNotRunning + \" , \";\r\n    newPin = newPin.slice(-newPin.length, -3);\r\n\r\n    let newBall = \"\";\r\n    if (ballReturn.ballRidingFrontRoller !== \"\")\r\n      newBall += ballReturn.ballRidingFrontRoller + \" , \";\r\n    if (ballReturn.ballRidingBounceBoard !== \"\")\r\n      newBall += ballReturn.ballRidingBounceBoard + \" , \";\r\n    if (ballReturn.ballYoYo !== \"\") newBall += ballReturn.ballYoYo + \" , \";\r\n    if (ballReturn.paddlePushingBallOut !== \"\")\r\n      newBall += ballReturn.paddlePushingBallOut + \" , \";\r\n    if (ballReturn.liftArmNotLiftingBall !== \"\")\r\n      newBall += ballReturn.liftArmNotLiftingBall + \" , \";\r\n    if (ballReturn.pinInBallExit !== \"\")\r\n      newBall += ballReturn.pinInBallExit + \" , \";\r\n    if (ballReturn.ballUnderground !== \"\")\r\n      newBall += ballReturn.ballUnderground + \" , \";\r\n    if (ballReturn.ballAtFrontUnit !== \"\")\r\n      newBall += ballReturn.ballAtFrontUnit + \" , \";\r\n    newBall = newBall.slice(-newBall.length, -3);\r\n\r\n    const today = new Date();\r\n    let data = {\r\n      sub_date: today,\r\n      date: value,\r\n      lane_number: select,\r\n      distributor: newDistributor,\r\n      dis_notes: disNotes,\r\n      table_title: newTable,\r\n      table_notes: tableNotes,\r\n      sweep: newSweep,\r\n      sweep_notes: sweepNotes,\r\n      pin: newPin,\r\n      pin_notes_needed: pinNotes,\r\n      ball_return: newBall,\r\n      ball_return_notes: ballReturnNotes,\r\n    };\r\n    console.log(data);\r\n    JSON.stringify(data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid\r\n          item\r\n          xs={10}\r\n          sm={8}\r\n          lg={6}\r\n          sx={{\r\n            margin: \"0 auto\",\r\n            backgroundColor: \"white\",\r\n            marginTop: \"100px\",\r\n            padding: \"50px\",\r\n          }}\r\n        >\r\n          <h1 style={{ paddingTop: \"30px\" }}>Lane Incident Form</h1>\r\n          <hr style={{ marginTop: \"50px\" }} />\r\n          <div style={{ marginTop: \"100px\" }}>\r\n            <h3>Date * </h3>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                renderInput={(props) => <TextField {...props} />}\r\n                value={value}\r\n                class\r\n                required\r\n                onChange={(newValue) => {\r\n                  setValue(newValue);\r\n                }}\r\n              />\r\n            </LocalizationProvider>\r\n          </div>\r\n          {evalue == undefined ? (\r\n            \"\"\r\n          ) : (\r\n            <p style={{ color: \"red\" }}>This field is required</p>\r\n          )}\r\n\r\n          <div style={{ marginTop: \"100px\" }}>\r\n            <h3>Lane Number</h3>\r\n            <FormControl required sx={{ m: 1, minWidth: 120, width: \"40%\" }}>\r\n              <InputLabel id=\"demo-simple-select-required-label\">\r\n                Please select\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-required-label\"\r\n                id=\"demo-simple-select-required\"\r\n                value={select}\r\n                label=\"Age *\"\r\n                required\r\n              >\r\n                <MenuItem value=\"\" onClick={(e) => setSelect(undefined)}>\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value=\"1\"\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 1\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 1\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value=\"2\"\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 2\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 2\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={3}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 3\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 3\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={4}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 4\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 4\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={5}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 5\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 5\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={6}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 6\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 6\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={7}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 7\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 7\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={8}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 8\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 8\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={9}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 9\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 9\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={10}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 10\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 10\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={11}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 11\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 11\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={12}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 12\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 12\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={13}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 13\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 13\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={14}\r\n                  onClick={(e) => {\r\n                    let tmp = \"Lane 14\";\r\n                    setSelect(tmp);\r\n                  }}\r\n                >\r\n                  Lane 14\r\n                </MenuItem>\r\n              </Select>\r\n              <FormHelperText></FormHelperText>\r\n            </FormControl>\r\n            {error == undefined ? (\r\n              \"\"\r\n            ) : (\r\n              <p style={{ color: \"red\" }}>This field is required</p>\r\n            )}\r\n          </div>\r\n\r\n          <Stack component=\"form\" noValidate autoComplete=\"off\">\r\n            <div className=\"mt-5\">\r\n              <h4>Distributor</h4>\r\n              <div style={{ marginLeft: \"10px\" }}>\r\n                <FormGroup className=\"ml-3\">\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Distributor Jam(list position)\"\r\n                    name=\"distributorJam\"\r\n                    onChange={(e) =>\r\n                      onChangeDistributor(e, \"Distributor Jam (list position)\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Orienting Pan Jam\"\r\n                    name=\"orientingPanJam\"\r\n                    onChange={(e) =>\r\n                      onChangeDistributor(e, \"Orienting Pan Jam\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Skipped Position(list position)\"\r\n                    name=\"skippedPosition\"\r\n                    onChange={(e) =>\r\n                      onChangeDistributor(e, \"Skipped Position (list position)\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Failed to Index(list position)\"\r\n                    name=\"failedToIndex\"\r\n                    onChange={(e) =>\r\n                      onChangeDistributor(e, \"Failed to Index (list position)\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    name=\"other\"\r\n                    onChange={(e) => onChangeDistributor(e, \"other\")}\r\n                    label=\"Other\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <h3 className=\"mt-5\">Distributor Notes (Position)</h3>\r\n            <TextField\r\n              hiddenLabel\r\n              fullWidth\r\n              variant=\"filled\"\r\n              size=\"large\"\r\n              style={{ inputStyle }}\r\n              className=\"mt-3\"\r\n              onChange={(e) => onInputChange(e, \"disNotes\")}\r\n            />\r\n\r\n            <div className=\"mt-5\">\r\n              <h4>Table</h4>\r\n              <div style={{ marginLeft: \"10px\" }}>\r\n                <FormGroup className=\"ml-3\">\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Monitor Not Running/Klickon Tripped\"\r\n                    name=\"monitorNotRunning\"\r\n                    onChange={(e) =>\r\n                      onChangeTable(e, \"Monitor Not Running/Klickon Tripped\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Pin Jam - Shuttle (position)\"\r\n                    name=\"pinJam\"\r\n                    onChange={(e) =>\r\n                      onChangeTable(e, \"Pin Jam - Shuttle (position)\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Pin Jammed in Table (position)\"\r\n                    name=\"pinJammedInTable\"\r\n                    onChange={(e) =>\r\n                      onChangeTable(e, \"Pin Jammed in Table (position)\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Pins Knocked Over While Spotting\"\r\n                    name=\"pinsKnockedOverWhileSpotting\"\r\n                    onChange={(e) =>\r\n                      onChangeTable(e, \"Pins Knocked Over While Spotting\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Pins not Spotted (all 10 at once)\"\r\n                    name=\"pinsNotSpotted\"\r\n                    onChange={(e) =>\r\n                      onChangeTable(e, \"Pins not Spotted (all 10 at once)\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Spotted Rack Missing Pins (position)\"\r\n                    name=\"spottedRackMissingPins\"\r\n                    onChange={(e) =>\r\n                      onChangeTable(e, \"Spotted Rack Missing Pins (position)\")\r\n                    }\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h3>Table Notes (Position)</h3>\r\n              <TextField\r\n                hiddenLabel\r\n                fullWidth\r\n                variant=\"filled\"\r\n                size=\"large\"\r\n                style={{ inputStyle }}\r\n                className=\"mt-3\"\r\n                onChange={(e) => onInputChange(e, \"tableNotes\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-5\">\r\n              <h4>Sweep</h4>\r\n              <div style={{ marginLeft: \"10px\" }}>\r\n                <FormGroup className=\"ml-3\">\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Pin Held Sweep at Tail Plank - Interlock\"\r\n                    name=\"pinHeldSweep\"\r\n                    onChange={(e) =>\r\n                      onSweepChange(\r\n                        e,\r\n                        \"Pin Held Sweep at Tail Plank - Interlock\"\r\n                      )\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Motor not Running/Klickon Tripped\"\r\n                    name=\"motorNotRunning\"\r\n                    onChange={(e) =>\r\n                      onSweepChange(e, \"Motor not Running/Klickon Tripped\")\r\n                    }\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-5\">\r\n              <h3>Sweep Notes</h3>\r\n              <TextField\r\n                hiddenLabel\r\n                fullWidth\r\n                variant=\"filled\"\r\n                size=\"large\"\r\n                style={{ inputStyle }}\r\n                className=\"mt-3\"\r\n                onChange={(e) => onInputChange(e, \"sweepNotes\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-5\">\r\n              <h4>Pin</h4>\r\n              <div style={{ marginLeft: \"10px\" }}>\r\n                <FormGroup className=\"ml-3\">\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Respot Pins (List Pins Needed)\"\r\n                    name=\"resptPins\"\r\n                    onChange={(e) =>\r\n                      onChangePin(e, \"Respot Pins (List Pins Needed)\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Add Pins (List Pins Needed)\"\r\n                    name=\"addPins\"\r\n                    onChange={(e) =>\r\n                      onChangePin(e, \"Add Pins (List Pins Needed)\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Off Spot in\"\r\n                    name=\"offSpotIn\"\r\n                    onChange={(e) => onChangePin(e, \"Off Spot in\")}\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Deadwood\"\r\n                    name=\"deadwood\"\r\n                    onChange={(e) => onChangePin(e, \"Deadwood\")}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-5\">\r\n              <h3>Pin Notes - Pins Needed </h3>\r\n              <TextField\r\n                hiddenLabel\r\n                fullWidth\r\n                variant=\"filled\"\r\n                size=\"large\"\r\n                style={{ inputStyle }}\r\n                className=\"mt-3\"\r\n                onChange={(e) => onInputChange(e, \"pinNotes\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-5\">\r\n              <h4>Ball return</h4>\r\n              <div style={{ marginLeft: \"10px\" }}>\r\n                <FormGroup className=\"ml-3\">\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Ball Riding Front Roller\"\r\n                    name=\"ballRidingFrontRoller\"\r\n                    onChange={(e) =>\r\n                      onChangeBall(e, \"Ball Riding Front Roller\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Ball Riding Bounce Board\"\r\n                    name=\"ballRidingBounceBoard\"\r\n                    onChange={(e) =>\r\n                      onChangeBall(e, \"Ball Riding Bounce Board\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Ball Yo-Yo\"\r\n                    name=\"ballYoYo\"\r\n                    onChange={(e) => onChangeBall(e, \"Ball Yo-Yo\")}\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Paddle Pushing Ball Out\"\r\n                    name=\"paddlePushingBallOut\"\r\n                    onChange={(e) => onChangeBall(e, \"Paddle Pushing Ball Out\")}\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Lift Arm Not Lifting Ball\"\r\n                    name=\"liftArmNotLiftingBall\"\r\n                    onChange={(e) =>\r\n                      onChangeBall(e, \"Lift Arm Not Lifting Ball\")\r\n                    }\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Pin in Ball Exit\"\r\n                    name=\"pinInBallExit\"\r\n                    onChange={(e) => onChangeBall(e, \"Pin in Ball Exit\")}\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Ball Underground\"\r\n                    name=\"ballUnderground\"\r\n                    onChange={(e) => onChangeBall(e, \"Ball Underground\")}\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    label=\"Ball at Front Unit\"\r\n                    name=\"ballAtFrontUnit\"\r\n                    onChange={(e) => onChangeBall(e, \"Ball at Front Unit\")}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-5\">\r\n              <h3>Ball Return Notes</h3>\r\n              <TextField\r\n                hiddenLabel\r\n                fullWidth\r\n                variant=\"filled\"\r\n                size=\"large\"\r\n                style={{ inputStyle }}\r\n                className=\"mt-3\"\r\n                onChange={(e) => onInputChange(e, \"ballReturnNotes\")}\r\n              />\r\n            </div>\r\n            <Button\r\n              style={{\r\n                marginTop: \"100px\",\r\n                padding: \"10px 20px\",\r\n                backgroundColor: \"#0066ff\",\r\n                color: \"white\",\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              size=\"large\"\r\n              onClick={validate}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport Report from \"./table\";\r\nimport Form from \"./form\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function FullWidthTabs() {\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: \"background.paper\" }}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"inherit\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Lane Incident Report\" {...a11yProps(0)} />\r\n          <Tab label=\"Lane Incident Form\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Report />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <Form />\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { Component, forwardRef } from \"react\";\n// import { Provider } from \"react-redux\";\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\n\n// import store from \"./store\";\nimport TabPanel from \"./components/insertForm/TabPanel\";\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <TabPanel />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}